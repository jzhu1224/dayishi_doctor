apply plugin: 'com.android.application'

android {

    compileSdkVersion COMPILE_SDK_VERSION as int

    defaultConfig {
        applicationId "com.jkdys.doctor"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        manifestPlaceholders = [EASEMOB_KEY: easemobKey()]
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    signingConfigs {
        release {
            storeFile file("dayishi.jks")
            storePassword "dys20180627"
            keyAlias "dys"
            keyPassword "dys20180627"
            //v2SigningEnabled false //强制V1签名方式
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.release
        }

        release {
            debuggable false
            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}



dependencies {

    compile 'com.nex3z:flow-layout:1.2.2'


    implementation "com.squareup.picasso:picasso:${PICASSO_VERSION}"
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40'
    implementation 'com.karumi:dexter:5.0.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.aurelhubert:ahbottomnavigation:2.1.0'
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.1'
    // If you want to use Android Lifecycle for providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.1'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.hannesdorfmann.mosby3:viewstate:3.1.0'
    // MVP + ViewState support
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //dagger2
    implementation 'com.google.dagger:dagger:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'
    implementation('com.qmuiteam:qmui:1.1.3', {
        exclude group: 'com.android.support'
    })
    // To use Gson
    implementation 'com.github.VictorAlbertos.Jolyglot:gson:0.0.3'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    //implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    //implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation project(':framework')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:support-v4:${SUPPORT_VERSION}"
    implementation "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    implementation "com.android.support:cardview-v7:${SUPPORT_VERSION}"
    implementation "com.android.support:design:${SUPPORT_VERSION}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-vector-drawable:27.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation project(':zz-secondary-linkage')
    implementation project(':sharesdk')
    implementation project(':easeui')
    implementation project(':image-selector')
}

String getServerEnv() {
    def env = "test"
    if (hasProperty("profile")) {
        env = getProperty("profile")
    }
    println("打包接口环境：" + env)
    return env
}

String easemobKey() {
    def productFlavorName = getServerEnv();
    if (productFlavorName.equals("test"))
        return 'jensenzhu#jkdystest'
    else if (productFlavorName.equals("beta"))
        return 'jensenzhu#jkdystest'
    else if (productFlavorName.equals("prod"))
        return 'jensenzhu#jkdystest'
    return 'jensenzhu#jkdystest'
}


